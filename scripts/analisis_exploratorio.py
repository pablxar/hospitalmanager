import flet as ft
import pandas as pd
import os
import matplotlib
matplotlib.use('Agg')
import matplotlib.pyplot as plt

class AnalisisExploratorio:
    def __init__(self, page: ft.Page, carpeta_salida: str):
        self.page = page
        self.carpeta_salida = carpeta_salida
        self.asegurar_directorios()

    def asegurar_directorios(self):
        os.makedirs(f"{self.carpeta_salida}/graficos/graficos_exploratorio", exist_ok=True)
        os.makedirs(f"{self.carpeta_salida}/tablas/tablas_exploratorio", exist_ok=True)

    def analisis_estadistico(self, df: pd.DataFrame):
        resumen = df.describe(include='all')
        resumen.to_excel(f"{self.carpeta_salida}/tablas/tablas_exploratorio/estadisticas_descriptivas.xlsx")
        self.page.snack_bar = ft.SnackBar(ft.Text("Resumen estadístico exportado."))
        self.page.snack_bar.open = True
        self.page.update()

    def generar_graficos(self, df: pd.DataFrame):
        # Histograma de edades
        if 'Edad en Años' in df.columns:
            plt.figure()
            df['Edad en Años'].hist(bins=20)
            plt.title('Histograma de Edad')
            plt.xlabel('Edad')
            plt.ylabel('Frecuencia')
            plt.savefig(f"{self.carpeta_salida}/graficos/graficos_exploratorio/histograma_edad.jpg")
            plt.close()

        # Barras: Motivo de egreso
        if 'Motivo Egreso (descripción)' in df.columns:
            plt.figure()
            df['Motivo Egreso (descripción)'].value_counts().plot(kind='bar')
            plt.title('Frecuencia por Motivo de Egreso')
            plt.xlabel('Motivo de Egreso')
            plt.ylabel('Frecuencia')
            plt.savefig(f"{self.carpeta_salida}/graficos/graficos_exploratorio/barras_motivo_egreso.jpg")
            plt.close()

        # Barras: Tipo de actividad
        if 'Tipo Actividad' in df.columns:
            plt.figure()
            df['Tipo Actividad'].value_counts().plot(kind='bar', color='orange')
            plt.title('Distribución por Tipo de Actividad')
            plt.xlabel('Tipo de Actividad')
            plt.ylabel('Frecuencia')
            plt.savefig(f"{self.carpeta_salida}/graficos/graficos_exploratorio/barras_tipo_actividad.jpg")
            plt.close()

        self.page.snack_bar = ft.SnackBar(ft.Text("Gráficos generados y guardados correctamente."))
        self.page.snack_bar.open = True
        self.page.update()

    def ejecutar_analisis(self, df: pd.DataFrame, update_progress=None):
        self.analisis_estadistico(df)
        if update_progress:
            update_progress()
        self.generar_graficos(df)
        if update_progress:
            update_progress()

    @staticmethod
    def get_total_steps():
        # Define the number of graphs and tables generated by this analysis
        return 3  # Example: 2 graphs + 1 table
